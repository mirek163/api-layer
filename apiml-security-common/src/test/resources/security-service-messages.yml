messages:
    # Security messages (100 - 199)
    # General messages (100 - 120)
    - key: org.zowe.apiml.security.generic
      number: ZWEAS100
      type: ERROR
      text: "Authentication exception: '%s' for URL '%s'"

    - key: org.zowe.apiml.security.invalidMethod
      number: ZWEAS101
      type: ERROR
      text: "Authentication method '%s' is not supported for URL '%s'"

    - key: org.zowe.apiml.security.expiredToken
      number: ZWEAS102
      type: ERROR
      text: "Token is expired for URL '%s'"

    - key: org.zowe.apiml.security.gatewayNotFound
      number: ZWEAS103
      type: ERROR
      text: "API Gateway Service not found by URL '%s'"

    - key: org.zowe.apiml.security.serviceUnavailable
      number: ZWEAS104
      type: ERROR
      text: "Authentication service not available by URL '%s'"

    # Login messages (120 - 130)
    - key: org.zowe.apiml.security.login.invalidCredentials
      number: ZWEAS120
      type: ERROR
      text: "Invalid username or password for URL '%s'"

    - key: org.zowe.apiml.security.login.invalidInput
      number: ZWEAS121
      type: ERROR
      text: "Authorization header is missing, or request body is missing or invalid for URL '%s'"

    - key: org.zowe.apiml.security.login.invalidTokenType
      number: ZWEAS123
      type: ERROR
      text: "Invalid token type in response from Authentication service."
      reason: "Could not retrieve the proper authentication token from the Authentication service response."
      action: "Review your APIML authentication provider configuration and ensure your Authentication service is working."

    # Query messages (130 - 140)
    - key: org.zowe.apiml.security.query.invalidToken
      number: ZWEAS130
      type: ERROR
      text: "Token is not valid for URL '%s'"

    - key: org.zowe.apiml.security.query.tokenNotProvided
      number: ZWEAS131
      type: ERROR
      text: "No authorization token provided for URL '%s'"

    # TLS,Certificate messages
    # 500-599

    - key: org.zowe.apiml.security.common.filter.errorParsingCertificate
      number: ZWEAT500
      type: ERROR
      text: "Failed to parse the client certificate forwarded from the central Gateway. Error message %s. The client certificate was %s"
      reason: "The string sent by the central Gateway was not recognized as valid DER-encoded certificate in the Base64 printable form."
      action: "Ensure that the forwarding of client certificate is enabled also in the central Gateway. Check for any error messages from the central Gateway."

    - key: org.zowe.apiml.security.common.verify.invalidResponse
      number: ZWEAT501
      type: ERROR
      text: "Failed to get trusted certificates from the central Gateway. Unexpected response from %s endpoint. Status code: %s. Response body: %s"
      reason: "The response status code is different from expected 200 OK."
      action: "Ensure that the parameter apiml.security.x509.certificatesUrl is correctly configured with the complete URL to the central Gateway certificates endpoint. Test the URL manually."

    - key: org.zowe.apiml.security.common.verify.invalidURL
      number: ZWEAT502
      type: ERROR
      text: "Invalid URL specified to get trusted certificates from the central Gateway. Error message: %s"
      reason: "The parameter apiml.security.x509.certificatesUrl is not correctly configured with the complete URL to the central Gateway certificates endpoint."
      action: "Ensure that the parameter apiml.security.x509.certificatesUrl is correctly configured."

    - key: org.zowe.apiml.security.common.verify.httpError
      number: ZWEAT503
      type: ERROR
      text: "An error occurred during retrieval of trusted certificates from the central Gateway. Error message: %s"
      reason: "The communication with the gateway got interrupted or an error occurred during processing the response."
      action: "Check the provided error message. Contact the support."

    - key: org.zowe.apiml.security.common.verify.errorParsingCertificates
      number: ZWEAT504
      type: ERROR
      text: "Failed to parse the trusted certificates provided by the central Gateway. Error message %s"
      reason: "The string sent by the central Gateway was not recognized as valid DER-encoded certificates in the Base64 printable form."
      action: "Check that the URL configured in apiml.security.x509.certificatesUrl responds with valid DER-encoded certificates in the Base64 printable form."

    - key: org.zowe.apiml.security.common.verify.untrustedCert
      number: ZWEAT505
      type: ERROR
      text: "Incoming request certificate is not one of the trusted certificates provided by the central Gateway."
      reason: "The Gateway performs additional check of request certificates when the central Gateway forwards incoming client certificate to the domain Gateway. This check may fail when the certificatesUrl parameter does not point to proper central Gateway certificates endpoint."
      action: "Check that the URL configured in apiml.security.x509.certificatesUrl points to the central Gateway and it responds with valid DER-encoded certificates in the Base64 printable form."

    # Personal access token messages
    - key: org.zowe.apiml.security.query.invalidAccessTokenBody
      number: ZWEAT605
      type: ERROR
      text: "Invalid body provided in request to create personal access token"
      reason: "The request body is not valid"
      action: "Use a valid body in the request. Format of a message: {validity: int , scopes: [string]}."

    # Personal access token messages
    - key: org.zowe.apiml.security.token.accessTokenBodyMissingScopes
      number: ZWEAT606
      type: ERROR
      text: "Body in the HTTP request for Personal Access Token does not contain scopes"
      reason: "The request body is not valid"
      action: "Provide a list of services for which this token will be valid"

    # Revoke personal access token
    - key: org.zowe.apiml.security.query.invalidRevokeRequestBody
      number: ZWEAT607
      type: ERROR
      text: "Body in the revoke request is not valid."
      reason: "The request body is not valid"
      action: "Use a valid body in the request. Format of a message: {userId: string, (optional)timestamp: long} or {serviceId: string, (optional)timestamp: long}."
